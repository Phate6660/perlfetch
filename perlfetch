#!/usr/bin/env perl
use warnings;

# Read a file and return a specified line.
sub get_line {
    my $file = $_[0];
    my $line_number = $_[1];
    open my $info, $file or die "Could not open $file: $!";
    my $line;
    while (my $line_from_file = <$info>) {
        $line = $line_from_file;
        last if $. == $line_number;
    }
    close $info;
    $line =~ s/\n//g;
    return $line;
}

sub get_var {
    my $env_var = $_[0];
    my $contents;
    if ($ENV{$env_var}) {
        $contents = $ENV{$env_var};
    } else {
        $contents = "N/A (could not read '\$$env_var')";
    }
    return $contents;
}

sub get_cpu {
    my $cpu_line = get_line('/proc/cpuinfo', 5);
    my @cpu_list = split(/:/, $cpu_line);
    my $cpu = $cpu_list[1];
    $cpu =~ s/^.//;
    return $cpu;
}

sub get_distro {
    my $dist_line = get_line('/etc/os-release', 3);
    my @dist_list = split(/=/, $dist_line);
    my $dist = $dist_list[1];
    $dist =~ s/"//g;
    return $dist;
}

sub get_info {
    my $cpu      = get_cpu;
    my $distro   = get_distro;
    my $editor   = get_var 'EDITOR';
    my $hostname = get_line('/etc/hostname', 1);
    my $kernel   = get_line('/proc/sys/kernel/osrelease', 1);
    my $shell    = get_var 'SHELL';
    my $user     = get_var 'USER';
    return (
        cpu      => $cpu,
        distro   => $distro,
        editor   => $editor,
        hostname => $hostname,
        kernel   => $kernel,
        shell    => $shell,
        user     => $user,
    );
}

my %info = get_info;
format OUTPUT =
^*
"CPU      = " . $info{cpu}
^*
"DISTRO   = " . $info{distro}
^*
"EDITOR   = " . $info{editor}
^*
"HOSTNAME = " . $info{hostname}
^*
"KERNEL   = " . $info{kernel}
^*
"SHELL    = " . $info{shell}
^*
"USER     = " . $info{user}
.

select(STDOUT);
$~ = OUTPUT;
write;
